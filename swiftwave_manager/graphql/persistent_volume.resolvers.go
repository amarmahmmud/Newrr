package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.39

import (
	"context"
	"fmt"

	"github.com/swiftwave-org/swiftwave/swiftwave_manager/graphql/model"
)

// CreatePersistentVolume is the resolver for the createPersistentVolume field.
func (r *mutationResolver) CreatePersistentVolume(ctx context.Context, input model.PersistentVolumeInput) (*model.PersistentVolume, error) {
	panic(fmt.Errorf("not implemented: CreatePersistentVolume - createPersistentVolume"))
}

// DeletePersistentVolume is the resolver for the deletePersistentVolume field.
func (r *mutationResolver) DeletePersistentVolume(ctx context.Context, id int) (*model.PersistentVolume, error) {
	panic(fmt.Errorf("not implemented: DeletePersistentVolume - deletePersistentVolume"))
}

// PersistentVolumes is the resolver for the persistentVolumes field.
func (r *queryResolver) PersistentVolumes(ctx context.Context) ([]*model.PersistentVolume, error) {
	panic(fmt.Errorf("not implemented: PersistentVolumes - persistentVolumes"))
}

// PersistentVolume is the resolver for the persistentVolume field.
func (r *queryResolver) PersistentVolume(ctx context.Context, id int) (*model.PersistentVolume, error) {
	panic(fmt.Errorf("not implemented: PersistentVolume - persistentVolume"))
}

// IsExistsPersistentVolume is the resolver for the isExistsPersistentVolume field.
func (r *queryResolver) IsExistsPersistentVolume(ctx context.Context, name string) (*bool, error) {
	panic(fmt.Errorf("not implemented: IsExistsPersistentVolume - isExistsPersistentVolume"))
}
