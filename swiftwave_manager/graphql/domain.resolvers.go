package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.39

import (
	"context"
	"fmt"

	"github.com/swiftwave-org/swiftwave/swiftwave_manager/graphql/model"
)

// IngressRules is the resolver for the ingressRules field.
func (r *domainResolver) IngressRules(ctx context.Context, obj *model.Domain) ([]*model.IngressRule, error) {
	panic(fmt.Errorf("not implemented: IngressRules - ingressRules"))
}

// RedirectRules is the resolver for the redirectRules field.
func (r *domainResolver) RedirectRules(ctx context.Context, obj *model.Domain) ([]*model.RedirectRule, error) {
	panic(fmt.Errorf("not implemented: RedirectRules - redirectRules"))
}

// AddDomain is the resolver for the addDomain field.
func (r *mutationResolver) AddDomain(ctx context.Context, input model.DomainInput) (*model.Domain, error) {
	panic(fmt.Errorf("not implemented: AddDomain - addDomain"))
}

// RemoveDomain is the resolver for the removeDomain field.
func (r *mutationResolver) RemoveDomain(ctx context.Context, id uint) (bool, error) {
	panic(fmt.Errorf("not implemented: RemoveDomain - removeDomain"))
}

// IssueSsl is the resolver for the issueSSL field.
func (r *mutationResolver) IssueSsl(ctx context.Context, id uint) (*model.Domain, error) {
	panic(fmt.Errorf("not implemented: IssueSsl - issueSSL"))
}

// AddCustomSsl is the resolver for the addCustomSSL field.
func (r *mutationResolver) AddCustomSsl(ctx context.Context, id uint, input model.CustomSSLInput) (*model.Domain, error) {
	panic(fmt.Errorf("not implemented: AddCustomSsl - addCustomSSL"))
}

// Domains is the resolver for the domains field.
func (r *queryResolver) Domains(ctx context.Context) ([]*model.Domain, error) {
	panic(fmt.Errorf("not implemented: Domains - domains"))
}

// Domain is the resolver for the domain field.
func (r *queryResolver) Domain(ctx context.Context, id uint) (*model.Domain, error) {
	panic(fmt.Errorf("not implemented: Domain - domain"))
}

// VerifyDomainConfiguration is the resolver for the verifyDomainConfiguration field.
func (r *queryResolver) VerifyDomainConfiguration(ctx context.Context, id uint) (bool, error) {
	panic(fmt.Errorf("not implemented: VerifyDomainConfiguration - verifyDomainConfiguration"))
}

// Domain returns DomainResolver implementation.
func (r *Resolver) Domain() DomainResolver { return &domainResolver{r} }

type domainResolver struct{ *Resolver }
