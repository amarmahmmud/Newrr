package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.39

import (
	"context"
	"fmt"

	"github.com/swiftwave-org/swiftwave/swiftwave_manager/graphql/model"
)

// CreateGitCredential is the resolver for the createGitCredential field.
func (r *mutationResolver) CreateGitCredential(ctx context.Context, input model.GitCredentialInput) (*model.GitCredential, error) {
	panic(fmt.Errorf("not implemented: CreateGitCredential - createGitCredential"))
}

// UpdateGitCredential is the resolver for the updateGitCredential field.
func (r *mutationResolver) UpdateGitCredential(ctx context.Context, id string, input model.GitCredentialInput) (*model.GitCredential, error) {
	panic(fmt.Errorf("not implemented: UpdateGitCredential - updateGitCredential"))
}

// DeleteGitCredential is the resolver for the deleteGitCredential field.
func (r *mutationResolver) DeleteGitCredential(ctx context.Context, id string) (*model.GitCredential, error) {
	panic(fmt.Errorf("not implemented: DeleteGitCredential - deleteGitCredential"))
}

// GitCredentials is the resolver for the GitCredentials field.
func (r *queryResolver) GitCredentials(ctx context.Context) ([]*model.GitCredential, error) {
	panic(fmt.Errorf("not implemented: GitCredentials - GitCredentials"))
}

// GitCredential is the resolver for the GitCredential field.
func (r *queryResolver) GitCredential(ctx context.Context, id string) (*model.GitCredential, error) {
	panic(fmt.Errorf("not implemented: GitCredential - GitCredential"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
