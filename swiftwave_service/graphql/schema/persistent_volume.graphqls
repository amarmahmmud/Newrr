type PersistentVolume {
    id: Uint!
    name: String!
    persistentVolumeBindings: [PersistentVolumeBinding!]!
    backups: [PersistentVolumeBackup!]!
}

input PersistentVolumeInput {
    name: String!
}

extend type Query {
    persistentVolumes: [PersistentVolume]
    persistentVolume(id: Uint!): PersistentVolume
    persistentVolumeSizeMb(id: Uint!): Float!
    isExistPersistentVolume(name: String!): Boolean!
}

extend type Mutation {
    createPersistentVolume(input: PersistentVolumeInput!): PersistentVolume
    deletePersistentVolume(id: Uint!): Boolean!
}