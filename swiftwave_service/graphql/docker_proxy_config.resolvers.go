package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.48

import (
	"context"
	"github.com/swiftwave-org/swiftwave/swiftwave_service/core"

	"github.com/swiftwave-org/swiftwave/swiftwave_service/graphql/model"
)

// SpecificServer is the resolver for the specificServer field.
func (r *dockerProxyConfigResolver) SpecificServer(ctx context.Context, obj *model.DockerProxyConfig) (*model.Server, error) {
	if obj.ServerPreference != model.DockerProxyServerPreferenceTypeSpecific || obj.SpecificServerID == nil {
		return nil, nil
	}
	server, err := core.FetchServerByID(&r.ServiceManager.DbClient, *obj.SpecificServerID)
	if err != nil {
		return nil, err
	}
	return serverToGraphqlObject(server), nil
}

// DockerProxyConfig returns DockerProxyConfigResolver implementation.
func (r *Resolver) DockerProxyConfig() DockerProxyConfigResolver {
	return &dockerProxyConfigResolver{r}
}

type dockerProxyConfigResolver struct{ *Resolver }
