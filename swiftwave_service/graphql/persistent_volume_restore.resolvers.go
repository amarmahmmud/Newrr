package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.46

import (
	"context"

	"github.com/swiftwave-org/swiftwave/swiftwave_service/core"
)

// DeletePersistentVolumeRestore is the resolver for the deletePersistentVolumeRestore field.
func (r *mutationResolver) DeletePersistentVolumeRestore(ctx context.Context, id uint) (bool, error) {
	// fetch the persistent volume restore
	var record core.PersistentVolumeRestore
	err := record.FindById(ctx, r.ServiceManager.DbClient, id)
	if err != nil {
		return false, err
	}
	// delete the persistent volume restore
	err = record.Delete(ctx, r.ServiceManager.DbClient, r.Config.LocalConfig.ServiceConfig.PVBackupDirectoryPath)
	if err != nil {
		return false, err
	}
	return true, nil
}

// DeletePersistentVolumeRestoresByPersistentVolumeID is the resolver for the deletePersistentVolumeRestoresByPersistentVolumeId field.
func (r *mutationResolver) DeletePersistentVolumeRestoresByPersistentVolumeID(ctx context.Context, persistentVolumeID uint) (bool, error) {
	// delete all persistent volume restores
	err := core.DeletePersistentVolumeRestoresByPersistentVolumeId(ctx, r.ServiceManager.DbClient, persistentVolumeID, r.Config.LocalConfig.ServiceConfig.PVBackupDirectoryPath)
	if err != nil {
		return false, err
	}
	return true, nil
}
